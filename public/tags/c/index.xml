<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c on 無面者小站</title>
    <link>https://alextrinityblock.github.io/blog/public/tags/c/</link>
    <description>Recent content in c on 無面者小站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hant</language>
    <lastBuildDate>Wed, 23 Feb 2022 00:00:44 +0800</lastBuildDate>
    
	<atom:link href="https://alextrinityblock.github.io/blog/public/tags/c/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>區域變數與陣列的記憶體安排</title>
      <link>https://alextrinityblock.github.io/blog/public/post/c/%E5%8D%80%E5%9F%9F%E8%AE%8A%E6%95%B8%E8%88%87%E9%99%A3%E5%88%97%E7%9A%84%E8%A8%98%E6%86%B6%E9%AB%94%E5%AE%89%E6%8E%92/</link>
      <pubDate>Sun, 28 Mar 2021 23:58:48 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/c/%E5%8D%80%E5%9F%9F%E8%AE%8A%E6%95%B8%E8%88%87%E9%99%A3%E5%88%97%E7%9A%84%E8%A8%98%E6%86%B6%E9%AB%94%E5%AE%89%E6%8E%92/</guid>
      <description>區域變數與動態分配存在於stack中，是由高位向低位記憶體成長 類似這樣 記憶體高位 ----- int a int b int c . . . ----- 記憶體低位 而陣列存在於heap中，是由</description>
    </item>
    
    <item>
      <title>C語言程式與x86組合語言的關係</title>
      <link>https://alextrinityblock.github.io/blog/public/post/c/c%E8%AA%9E%E8%A8%80%E7%A8%8B%E5%BC%8F%E8%88%87x86%E7%B5%84%E5%90%88%E8%AA%9E%E8%A8%80%E7%9A%84%E9%97%9C%E4%BF%82/</link>
      <pubDate>Thu, 25 Mar 2021 02:14:58 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/c/c%E8%AA%9E%E8%A8%80%E7%A8%8B%E5%BC%8F%E8%88%87x86%E7%B5%84%E5%90%88%E8%AA%9E%E8%A8%80%E7%9A%84%E9%97%9C%E4%BF%82/</guid>
      <description>緣由 前段時間，嘉義大學資訊工程系受人敬重的王教授寄給我一份關於防範buffer overflow的相關文章， 這文章十分的棒，裡頭大致上提到如何</description>
    </item>
    
    <item>
      <title>Gdb使用</title>
      <link>https://alextrinityblock.github.io/blog/public/post/c/gdb%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 24 Mar 2021 14:01:49 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/c/gdb%E4%BD%BF%E7%94%A8/</guid>
      <description>GDB使用指令 --------------- 提示gcc編譯時記得開啟g選項，編譯出來的產物才不會啟動優化， 同時可以使用gdb除錯 匯入檔案：gdb 檔案名稱 匯入後命令行左邊</description>
    </item>
    
  </channel>
</rss>