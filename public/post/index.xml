<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>無面者小站</title>
    <link>https://alextrinityblock.github.io/blog/public/post/</link>
    <description>Recent content on 無面者小站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hant</language>
    <lastBuildDate>Tue, 15 Feb 2022 12:00:44 +0800</lastBuildDate>
    
	<atom:link href="https://alextrinityblock.github.io/blog/public/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ASP.net架構簡介</title>
      <link>https://alextrinityblock.github.io/blog/public/post/asp.net/asp.net%E6%9E%B6%E6%A7%8B%E7%B0%A1%E4%BB%8B/</link>
      <pubDate>Tue, 15 Feb 2022 12:00:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/asp.net/asp.net%E6%9E%B6%E6%A7%8B%E7%B0%A1%E4%BB%8B/</guid>
      <description>ASP.net初探 這只是隨意概括的淺談ASP.net的架構。 在這邊展示的是ASP.net的MVC架構網站的一個概括模型。 進入點與外層資料夾結</description>
    </item>
    
    <item>
      <title>NPM安裝</title>
      <link>https://alextrinityblock.github.io/blog/public/post/node.js/npm%E5%AE%89%E8%A3%9D/</link>
      <pubDate>Tue, 15 Feb 2022 12:00:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/node.js/npm%E5%AE%89%E8%A3%9D/</guid>
      <description>NPM是啥？ node.js就像是一個登山客，沒有任何裝備時能作到的事情不多，而NPM就如同他的背包，可以讓node.js裝上許多不同的模塊。</description>
    </item>
    
    <item>
      <title>html筆記</title>
      <link>https://alextrinityblock.github.io/blog/public/post/html/html%E7%AD%86%E8%A8%98/</link>
      <pubDate>Mon, 14 Feb 2022 15:00:03 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/html/html%E7%AD%86%E8%A8%98/</guid>
      <description>1.簡介 這只是HTML的複習與助記 2.</description>
    </item>
    
    <item>
      <title>NS2課程筆記</title>
      <link>https://alextrinityblock.github.io/blog/public/post/class/ns2%E8%AA%B2%E7%A8%8B%E7%AD%86%E8%A8%98/</link>
      <pubDate>Tue, 12 Oct 2021 09:00:49 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/class/ns2%E8%AA%B2%E7%A8%8B%E7%AD%86%E8%A8%98/</guid>
      <description>目錄 NS2使用什麼語言 變數 閱讀檔案 判斷與表示 流程控制 程序(類似函數) NS2使用什麼語言 NS2使用一種稱為TCL的語言，如果想了解更多的語法可</description>
    </item>
    
    <item>
      <title>OpenGL課堂筆記</title>
      <link>https://alextrinityblock.github.io/blog/public/post/class/opengl%E8%AA%B2%E5%A0%82%E7%AD%86%E8%A8%98/</link>
      <pubDate>Thu, 07 Oct 2021 10:00:49 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/class/opengl%E8%AA%B2%E5%A0%82%E7%AD%86%E8%A8%98/</guid>
      <description>目錄 第一週 推薦書 Edward Angel and Dave Shreiner, Interactive Computer Graphics: A Top-Down Approach With Shader-Based Opengl, 6th Edition, Addison-Wesley Pub. Co., April 10, 2011. ISBN：978-0132545235. Edward Angel and Dave Shreiner, Interactive Computer Graphics: A Top-Down Approach Using WebGL, 7th Edition, Addison-Wesley Pub. Co., March 10,</description>
    </item>
    
    <item>
      <title>資訊安全與管理筆記</title>
      <link>https://alextrinityblock.github.io/blog/public/post/class/%E8%B3%87%E8%A8%8A%E5%AE%89%E5%85%A8%E8%88%87%E7%AE%A1%E7%90%86%E7%AD%86%E8%A8%98/</link>
      <pubDate>Sun, 03 Oct 2021 22:00:49 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/class/%E8%B3%87%E8%A8%8A%E5%AE%89%E5%85%A8%E8%88%87%E7%AE%A1%E7%90%86%E7%AD%86%E8%A8%98/</guid>
      <description>目錄 第一週 第二週 第三週 第一週 推薦書 William Stallings. Cryptography and Network Security: Principles and Practice (7th Edition). Prentice Hall, 2017(主要) Behrouz A. Forouzan. Introduction to Cryptography and Network Security. McGraw-Hill, 2007. Douglas R. Stinson. Cryptography : theory and practice (3/e). Boca Raton : Chapman &amp;amp; Hall/CRC, 2006. Bruce Schneier. Applied Cryptography: Protocols,</description>
    </item>
    
    <item>
      <title>影像識別課程筆記</title>
      <link>https://alextrinityblock.github.io/blog/public/post/class/%E5%BD%B1%E5%83%8F%E8%AD%98%E5%88%A5%E8%AA%B2%E7%A8%8B%E7%AD%86%E8%A8%98/</link>
      <pubDate>Fri, 01 Oct 2021 09:00:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/class/%E5%BD%B1%E5%83%8F%E8%AD%98%E5%88%A5%E8%AA%B2%E7%A8%8B%E7%AD%86%E8%A8%98/</guid>
      <description>目錄 第一週 第二週 第一週 什麼是影像？ 影像是由許多x,y軸座標組成。 單一個點的振幅，也可以視為光線的亮度，稱為『intensity』(強度)或『</description>
    </item>
    
    <item>
      <title>opengl安裝(Ubuntu)</title>
      <link>https://alextrinityblock.github.io/blog/public/post/opengl/opengl%E5%AE%89%E8%A3%9Dubuntu/</link>
      <pubDate>Wed, 29 Sep 2021 09:00:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/opengl/opengl%E5%AE%89%E8%A3%9Dubuntu/</guid>
      <description>1.Linux版本 此範例用在Ubuntu20.04 2.apt安裝opengl 安裝OpenGL與相關依賴 sudo apt install cmake make g++ libx11-dev libgl1-mesa-dev libglu1-mesa-dev libxrandr-dev libxext-dev libglew-dev libglfw3 libglfw3-dev freeglut3-dev freeglut3 這邊主</description>
    </item>
    
    <item>
      <title>Android06客戶端Socket(待修正)</title>
      <link>https://alextrinityblock.github.io/blog/public/post/android/android06%E5%AE%A2%E6%88%B6%E7%AB%AFsocket/</link>
      <pubDate>Fri, 24 Sep 2021 21:20:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/android/android06%E5%AE%A2%E6%88%B6%E7%AB%AFsocket/</guid>
      <description>本篇未經調整，雖然能運作，但其中命名可能容易混淆，請斟酌參考。 1.開通網路使用權限 AndroidManifest.xml &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt; &amp;lt;manifest xmlns:android=&amp;#34;http://schemas.android.com/apk/res/android&amp;#34; package=&amp;#34;com.example.httpreguests&amp;#34;&amp;gt; &amp;lt;!--這兩行是關鍵內容，可以啟動網路</description>
    </item>
    
    <item>
      <title>java撰寫socket的client端</title>
      <link>https://alextrinityblock.github.io/blog/public/post/java/java%E6%92%B0%E5%AF%ABsocket%E7%9A%84client%E7%AB%AF/</link>
      <pubDate>Fri, 24 Sep 2021 20:00:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/java/java%E6%92%B0%E5%AF%ABsocket%E7%9A%84client%E7%AB%AF/</guid>
      <description>1.緣由 我今天在實驗室跟學長一起研究Java中Socket的撰寫，在此進行筆記以免忘記。 Socket是由server與client組成，有時</description>
    </item>
    
    <item>
      <title>opencv的第一個程式</title>
      <link>https://alextrinityblock.github.io/blog/public/post/opencv/opencv%E7%9A%84%E7%AC%AC%E4%B8%80%E5%80%8B%E7%A8%8B%E5%BC%8F/</link>
      <pubDate>Wed, 22 Sep 2021 09:10:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/opencv/opencv%E7%9A%84%E7%AC%AC%E4%B8%80%E5%80%8B%E7%A8%8B%E5%BC%8F/</guid>
      <description>1.要求 需要看懂，建議去看基礎的C++教學。 2.main.cpp 我們首先建立一個檔案，稱為main.cpp 內含我們主要的C++檔案 #include &amp;lt;stdio.h&amp;gt;#include &amp;lt;opencv2/opencv.hpp&amp;gt; using namespace cv; int main(int argc, char* argv[]) { // 檢</description>
    </item>
    
    <item>
      <title>opencv安裝</title>
      <link>https://alextrinityblock.github.io/blog/public/post/opencv/opencv%E5%AE%89%E8%A3%9D/</link>
      <pubDate>Wed, 22 Sep 2021 09:00:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/opencv/opencv%E5%AE%89%E8%A3%9D/</guid>
      <description>1.Linux版本 此範例用在Ubuntu20.04 2.apt安裝opencv 安裝c++版本 sudo apt-get install libopencv-dev 安裝python版本 sudo apt-get install python-opencv</description>
    </item>
    
    <item>
      <title>Android05進行httprequest</title>
      <link>https://alextrinityblock.github.io/blog/public/post/android/android05%E9%80%B2%E8%A1%8Chttprequest/</link>
      <pubDate>Thu, 16 Sep 2021 09:00:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/android/android05%E9%80%B2%E8%A1%8Chttprequest/</guid>
      <description>1.開通網路使用權限 AndroidManifest.xml &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt; &amp;lt;manifest xmlns:android=&amp;#34;http://schemas.android.com/apk/res/android&amp;#34; package=&amp;#34;com.example.httpreguests&amp;#34;&amp;gt; &amp;lt;!--這兩行是關鍵內容，可以啟動網路使用權限--&amp;gt; &amp;lt;uses-permission android:name=&amp;#34;android.permission.INTERNET&amp;#34;/&amp;gt; &amp;lt;uses-permission android:name=&amp;#34;android.permission.ACCESS_NETWORK_STATE&amp;#34; /&amp;gt; &amp;lt;!--這兩行是關鍵內容，</description>
    </item>
    
    <item>
      <title>Android snackbar與除錯log04</title>
      <link>https://alextrinityblock.github.io/blog/public/post/android/android-snackbar%E8%88%87%E9%99%A4%E9%8C%AFlog04/</link>
      <pubDate>Fri, 10 Sep 2021 09:00:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/android/android-snackbar%E8%88%87%E9%99%A4%E9%8C%AFlog04/</guid>
      <description>1.目標 各種程式語言在執行的時候都可以看到一些log，方便我們除錯與對程式進行調整。 Android上也存在著顯示log的工具。 除此之外，還有</description>
    </item>
    
    <item>
      <title>Android長期保存資料於SharedPreferences03</title>
      <link>https://alextrinityblock.github.io/blog/public/post/android/android%E9%95%B7%E6%9C%9F%E4%BF%9D%E5%AD%98%E8%B3%87%E6%96%99%E6%96%BCsharedpreferences03/</link>
      <pubDate>Thu, 09 Sep 2021 15:00:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/android/android%E9%95%B7%E6%9C%9F%E4%BF%9D%E5%AD%98%E8%B3%87%E6%96%99%E6%96%BCsharedpreferences03/</guid>
      <description>1.目標 將資料存入Android的SharedPreferences，進行長期保存 官方文檔 https://developer.android.com/reference/android/content/SharedPreferences 2.前端 欄位： 文字輸入欄位(將資料存入Share</description>
    </item>
    
    <item>
      <title>Android將使用者輸入傳入後端02</title>
      <link>https://alextrinityblock.github.io/blog/public/post/android/android%E5%B0%87%E4%BD%BF%E7%94%A8%E8%80%85%E8%BC%B8%E5%85%A5%E5%82%B3%E5%85%A5%E5%BE%8C%E7%AB%AF02/</link>
      <pubDate>Thu, 09 Sep 2021 14:00:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/android/android%E5%B0%87%E4%BD%BF%E7%94%A8%E8%80%85%E8%BC%B8%E5%85%A5%E5%82%B3%E5%85%A5%E5%BE%8C%E7%AB%AF02/</guid>
      <description>1.目標 這次的目標是要把前端輸入欄位的內容，接收到後端的java，然後再重新傳回前端。 從前端擷取內容，對於像是帳號密碼登入，輸入金額，或類似</description>
    </item>
    
    <item>
      <title>Android中的按鈕01</title>
      <link>https://alextrinityblock.github.io/blog/public/post/android/android%E4%B8%AD%E7%9A%84%E6%8C%89%E9%88%9501/</link>
      <pubDate>Thu, 09 Sep 2021 09:00:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/android/android%E4%B8%AD%E7%9A%84%E6%8C%89%E9%88%9501/</guid>
      <description>1.介紹 當我們要開發安卓App時，第一個步驟就是安裝Android Studio。 可以在官方網站上頭找到下載點。 Android Studio官方網站 https://developer.android.com/studio 2.開</description>
    </item>
    
    <item>
      <title>單向函數</title>
      <link>https://alextrinityblock.github.io/blog/public/post/math/%E5%96%AE%E5%90%91%E5%87%BD%E6%95%B8/</link>
      <pubDate>Fri, 20 Aug 2021 14:43:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/math/%E5%96%AE%E5%90%91%E5%87%BD%E6%95%B8/</guid>
      <description>1.簡介 簡單來說，用某個函數將x算成y很容易。 \[ y=f(x) \] 但是反過來的話，將y算回x則十分困難。也就是說，y算回x需要大量的時間，甚至有時候只能將</description>
    </item>
    
    <item>
      <title>數學符號</title>
      <link>https://alextrinityblock.github.io/blog/public/post/math/%E6%95%B8%E5%AD%B8%E7%AC%A6%E8%99%9F/</link>
      <pubDate>Fri, 20 Aug 2021 14:43:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/math/%E6%95%B8%E5%AD%B8%E7%AC%A6%E8%99%9F/</guid>
      <description>1.連續乘法符號 該符號代表連續成法，是pi的大寫版本。 \[ \prod_{i=1}^{4} {i} = 1\times2\times3\times4=24 \] &amp;lt;script src=&amp;#34;https://polyfill.io/v3/polyfill.min.js?features=es6&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script id=&amp;#34;MathJax-script&amp;#34; async src=&amp;#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;p&amp;gt; \[ \prod_{i=1}^{4} {i} = 1\times2\times3\times4 \] &amp;lt;/p&amp;gt;</description>
    </item>
    
    <item>
      <title>python網路與安全閱讀心得</title>
      <link>https://alextrinityblock.github.io/blog/public/post/python/python%E7%B6%B2%E8%B7%AF%E8%88%87%E5%AE%89%E5%85%A8%E8%AE%80%E6%9B%B8%E5%BF%83%E5%BE%97/</link>
      <pubDate>Mon, 26 Jul 2021 10:00:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/python/python%E7%B6%B2%E8%B7%AF%E8%88%87%E5%AE%89%E5%85%A8%E8%AE%80%E6%9B%B8%E5%BF%83%E5%BE%97/</guid>
      <description>本篇引用自Mastering python for networking and security一書 文中所有範例都來自該書本與該書本的範例網站 書本的範例儲存庫: https://github.com/PacktPublishing/Mastering-Python-for-Networking-and-Security-Second-Edition 目錄 第一章 從目錄來看，</description>
    </item>
    
    <item>
      <title>MAC位址掩蔽</title>
      <link>https://alextrinityblock.github.io/blog/public/post/secure/mac%E4%BD%8D%E5%9D%80%E6%8E%A9%E8%94%BD/</link>
      <pubDate>Wed, 21 Jul 2021 10:00:49 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/secure/mac%E4%BD%8D%E5%9D%80%E6%8E%A9%E8%94%BD/</guid>
      <description>作者 阿維 環境 Ubuntu 20.04 概念 我們的IP位址，除非申請固定IP否則是會變化的，如果你願意也可以用特定軟體來改變或借用別人的IP位址。 所以既然IP是可以</description>
    </item>
    
    <item>
      <title>suricata入侵防禦系統(IPS)</title>
      <link>https://alextrinityblock.github.io/blog/public/post/secure/suricata%E5%85%A5%E4%BE%B5%E9%98%B2%E7%A6%A6%E7%B3%BB%E7%B5%B1ips/</link>
      <pubDate>Mon, 19 Jul 2021 09:00:49 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/secure/suricata%E5%85%A5%E4%BE%B5%E9%98%B2%E7%A6%A6%E7%B3%BB%E7%B5%B1ips/</guid>
      <description>作者 阿維 環境 拜託，使用Ubuntu吧! 不然要從頭編譯suricata。 雖然可以，但是比較麻煩。 安裝 安裝PPA sudo apt-get update sudo apt-get install software-properties-common sudo add-apt-repository ppa:oisf/suricata-stable sudo apt-get update 安裝s</description>
    </item>
    
    <item>
      <title>讓firefox跑在docker-compose裡頭的正確腳本</title>
      <link>https://alextrinityblock.github.io/blog/public/post/docker/%E8%AE%93firefox%E8%B7%91%E5%9C%A8docker-compose%E8%A3%A1%E9%A0%AD%E7%9A%84%E6%AD%A3%E7%A2%BA%E8%85%B3%E6%9C%AC/</link>
      <pubDate>Sat, 17 Jul 2021 10:05:03 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/docker/%E8%AE%93firefox%E8%B7%91%E5%9C%A8docker-compose%E8%A3%A1%E9%A0%AD%E7%9A%84%E6%AD%A3%E7%A2%BA%E8%85%B3%E6%9C%AC/</guid>
      <description>資料夾結構 firefox ├── docker-compose.yml ├── Dockerfile └── run docker-compose.yml #docker-compose版本 version: &amp;#34;3.4&amp;#34; #服務，不過這裡唯一的服務就是firefox瀏覽器 services: #服務名稱，</description>
    </item>
    
    <item>
      <title>用UFW在ping下隱藏自己</title>
      <link>https://alextrinityblock.github.io/blog/public/post/secure/%E7%94%A8ufw%E5%9C%A8ping%E4%B8%8B%E9%9A%B1%E8%97%8F%E8%87%AA%E5%B7%B1/</link>
      <pubDate>Tue, 13 Jul 2021 16:00:49 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/secure/%E7%94%A8ufw%E5%9C%A8ping%E4%B8%8B%E9%9A%B1%E8%97%8F%E8%87%AA%E5%B7%B1/</guid>
      <description>作者 阿維 概念 通常入侵與攻擊的第一步驟，是藉由ICMP(例如ping)或其他開放端口服務發掘主機所在的IP位址。 我們可以嘗試先在ICMP的角度</description>
    </item>
    
    <item>
      <title>公共WIFI網路嗅探</title>
      <link>https://alextrinityblock.github.io/blog/public/post/secure/%E5%85%AC%E5%85%B1wifi%E7%B6%B2%E8%B7%AF%E5%97%85%E6%8E%A2/</link>
      <pubDate>Thu, 08 Jul 2021 16:00:49 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/secure/%E5%85%AC%E5%85%B1wifi%E7%B6%B2%E8%B7%AF%E5%97%85%E6%8E%A2/</guid>
      <description>作者 阿維 同意條款 閱讀本篇文章等同承諾: 不將相關知識用在任何非法用途 不窺探他人隱私 保持誠實與友善 所有安全測試知識只用於維護安全的目的 測試用的器</description>
    </item>
    
    <item>
      <title>一篇CC攻擊腳本分析</title>
      <link>https://alextrinityblock.github.io/blog/public/post/secure/%E4%B8%80%E7%AF%87cc%E6%94%BB%E6%93%8A%E8%85%B3%E6%9C%AC%E5%88%86%E6%9E%90/</link>
      <pubDate>Mon, 21 Jun 2021 09:00:49 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/secure/%E4%B8%80%E7%AF%87cc%E6%94%BB%E6%93%8A%E8%85%B3%E6%9C%AC%E5%88%86%E6%9E%90/</guid>
      <description>聲明 本篇分析由阿維撰寫，特此感謝推薦我資安書籍的王教授，陪我進行測試的蕉蕉，與陪我聊天的小李。 本篇文章的研究目的是為了保護網站主機，而對於攻</description>
    </item>
    
    <item>
      <title>AppArmor研究_1</title>
      <link>https://alextrinityblock.github.io/blog/public/post/secure/apparmor%E7%A0%94%E7%A9%B6_1/</link>
      <pubDate>Wed, 16 Jun 2021 10:01:49 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/secure/apparmor%E7%A0%94%E7%A9%B6_1/</guid>
      <description>AppArmor 是一款附帶在Ubuntu linux裡頭的核心安全模組，是用來進行強制存取控制(MAC)的。 假定我們今天運作著PHP網頁伺服器，而裡頭某個漏</description>
    </item>
    
    <item>
      <title>讓容器獲得本機網路的完整權限</title>
      <link>https://alextrinityblock.github.io/blog/public/post/docker/%E8%AE%93%E5%AE%B9%E5%99%A8%E7%8D%B2%E5%BE%97%E6%9C%AC%E6%A9%9F%E7%B6%B2%E8%B7%AF%E7%9A%84%E5%AE%8C%E6%95%B4%E6%AC%8A%E9%99%90/</link>
      <pubDate>Sat, 12 Jun 2021 00:05:03 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/docker/%E8%AE%93%E5%AE%B9%E5%99%A8%E7%8D%B2%E5%BE%97%E6%9C%AC%E6%A9%9F%E7%B6%B2%E8%B7%AF%E7%9A%84%E5%AE%8C%E6%95%B4%E6%AC%8A%E9%99%90/</guid>
      <description>docker run指令的對外網開放端口選項 我們如果想讓容器與本機使用同一個網路，並且能建立像是網頁伺服器一類的對外開放端口， 可以將網路設置為host。</description>
    </item>
    
    <item>
      <title>docker運作圖形程式</title>
      <link>https://alextrinityblock.github.io/blog/public/post/docker/docker%E9%81%8B%E4%BD%9C%E5%9C%96%E5%BD%A2%E7%A8%8B%E5%BC%8F/</link>
      <pubDate>Tue, 08 Jun 2021 00:05:03 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/docker/docker%E9%81%8B%E4%BD%9C%E5%9C%96%E5%BD%A2%E7%A8%8B%E5%BC%8F/</guid>
      <description>本篇我們以在docker上頭運作firefox程式為案例。 但也可應用在其他的軟體。 知識 連線檔案 由於在linux上頭連socket連線都是以檔</description>
    </item>
    
    <item>
      <title>關於DNS相關的問題</title>
      <link>https://alextrinityblock.github.io/blog/public/post/temp/6%E6%9C%887%E6%97%A5%E5%95%8F%E9%A1%8C/</link>
      <pubDate>Mon, 07 Jun 2021 09:00:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/temp/6%E6%9C%887%E6%97%A5%E5%95%8F%E9%A1%8C/</guid>
      <description>王教授您好，我是阿維: 感謝您播出時間，來回答我的問題。 我在閱讀您的推薦書關於python network security， 讀到關於DNS的篇章時育上了一個</description>
    </item>
    
    <item>
      <title>github免密碼上傳與RSA金鑰產生</title>
      <link>https://alextrinityblock.github.io/blog/public/post/git/github%E5%85%8D%E5%AF%86%E7%A2%BC%E4%B8%8A%E5%82%B3/</link>
      <pubDate>Wed, 19 May 2021 00:05:03 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/git/github%E5%85%8D%E5%AF%86%E7%A2%BC%E4%B8%8A%E5%82%B3/</guid>
      <description>先決條件 這篇是建立在理解 git基本使用 擁有github帳號 使用linux 上述條件達成才比較能夠理解本篇git的部份， 建議上網找些資料學習。 不</description>
    </item>
    
    <item>
      <title>LinuxMint20.1上安裝docker</title>
      <link>https://alextrinityblock.github.io/blog/public/post/docker/linuxmint%E4%B8%8A%E5%AE%89%E8%A3%9Ddocker/</link>
      <pubDate>Wed, 19 May 2021 00:05:03 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/docker/linuxmint%E4%B8%8A%E5%AE%89%E8%A3%9Ddocker/</guid>
      <description>Mint安裝docker會遇上的問題 由於Mint目前還沒有專用版本的docker儲存庫， 所以我們必須使用Mint的源頭Ubuntu版本的do</description>
    </item>
    
    <item>
      <title>python與byte串與網路</title>
      <link>https://alextrinityblock.github.io/blog/public/post/python/python%E8%88%87%E5%AD%97%E5%85%83%E4%B8%B2/</link>
      <pubDate>Sat, 15 May 2021 00:00:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/python/python%E8%88%87%E5%AD%97%E5%85%83%E4%B8%B2/</guid>
      <description>本篇引用自Foundations of Python Network Programming一書 bytes串與網路的關係 在網路傳輸時如socket，是無法直接採取Unico</description>
    </item>
    
    <item>
      <title>中斷無線網路的方法</title>
      <link>https://alextrinityblock.github.io/blog/public/post/secure/%E4%B8%AD%E6%96%B7%E7%84%A1%E7%B7%9A%E7%B6%B2%E8%B7%AF%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 03 May 2021 10:01:49 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/secure/%E4%B8%AD%E6%96%B7%E7%84%A1%E7%B7%9A%E7%B6%B2%E8%B7%AF%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>警告：此方法只能用於自己的無線網路裝置，目的應該是了解無線網路運作，絕對不能造成他人的困擾或損失，我們應該秉持所有人類都是同胞的心態。就算你</description>
    </item>
    
    <item>
      <title>docker.sock錯誤處理</title>
      <link>https://alextrinityblock.github.io/blog/public/post/docker/docker%E7%A7%92%E9%80%80%E7%9A%84%E5%95%8F%E9%A1%8C/</link>
      <pubDate>Sat, 01 May 2021 23:05:03 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/docker/docker%E7%A7%92%E9%80%80%E7%9A%84%E5%95%8F%E9%A1%8C/</guid>
      <description>docker.sock的錯誤 剛裝好docker時常常會跳出此種錯誤 Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.40/containers/json: dial unix /var/run/docker.sock: connect: permission denied docker.sock的功能 簡</description>
    </item>
    
    <item>
      <title>python網路程式03:tcp</title>
      <link>https://alextrinityblock.github.io/blog/public/post/python/python%E7%B6%B2%E8%B7%AF%E7%A8%8B%E5%BC%8F03tcp/</link>
      <pubDate>Thu, 29 Apr 2021 23:15:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/python/python%E7%B6%B2%E8%B7%AF%E7%A8%8B%E5%BC%8F03tcp/</guid>
      <description>本篇引用自Foundations of Python Network Programming一書 1.tcp通訊 import argparse, socket #如果長度不符預期，則發出錯誤提示 def recvall(sock, length): data = b&amp;#39;&amp;#39; while len(data) &amp;lt; length: more</description>
    </item>
    
    <item>
      <title>python網路程式02:udp協定與port</title>
      <link>https://alextrinityblock.github.io/blog/public/post/python/python%E7%B6%B2%E8%B7%AF%E7%A8%8B%E5%BC%8F02udp%E5%8D%94%E5%AE%9A%E8%88%87port/</link>
      <pubDate>Thu, 29 Apr 2021 22:15:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/python/python%E7%B6%B2%E8%B7%AF%E7%A8%8B%E5%BC%8F02udp%E5%8D%94%E5%AE%9A%E8%88%87port/</guid>
      <description>本篇引用自Foundations of Python Network Programming一書 1.port的用途 port其實可以看作在網路傳輸訊息上頭的一個小標籤 用來區分</description>
    </item>
    
    <item>
      <title>python網路程式01:基礎</title>
      <link>https://alextrinityblock.github.io/blog/public/post/python/python%E7%B6%B2%E8%B7%AF%E7%A8%8B%E5%BC%8F01%E5%9F%BA%E7%A4%8E/</link>
      <pubDate>Thu, 29 Apr 2021 16:15:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/python/python%E7%B6%B2%E8%B7%AF%E7%A8%8B%E5%BC%8F01%E5%9F%BA%E7%A4%8E/</guid>
      <description>本篇引用自Foundations of Python Network Programming一書 本章討論如何使用python發出http請求 1.用網址取得主機ip import socket if __name__ ==</description>
    </item>
    
    <item>
      <title>python_virtualenv使用</title>
      <link>https://alextrinityblock.github.io/blog/public/post/python/python_virtualenv%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 29 Apr 2021 14:43:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/python/python_virtualenv%E4%BD%BF%E7%94%A8/</guid>
      <description>1.安裝virtualenv虛擬環境 linux mint或ubuntu上頭安裝時可以用apt來進行安裝 sudo apt install virtualenv 或直接用pip3來安裝 pip3 install virtualenv 2.建立虛擬</description>
    </item>
    
    <item>
      <title>檢查下載檔是否被調包</title>
      <link>https://alextrinityblock.github.io/blog/public/post/secure/%E6%AA%A2%E6%9F%A5%E4%B8%8B%E8%BC%89%E6%AA%94%E6%98%AF%E5%90%A6%E8%A2%AB%E8%AA%BF%E5%8C%85/</link>
      <pubDate>Tue, 27 Apr 2021 14:01:49 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/secure/%E6%AA%A2%E6%9F%A5%E4%B8%8B%E8%BC%89%E6%AA%94%E6%98%AF%E5%90%A6%E8%A2%AB%E8%AA%BF%E5%8C%85/</guid>
      <description>1.檢查檔案的方法 今天假設我們下載了一個檔案，叫做 ubuntu-20.04.2-live-server-amd64.iso 我們要如何檢查是否被High客給調包？ （High客：在網路上無時無刻情緒都很high，會</description>
    </item>
    
    <item>
      <title>ngrok使用</title>
      <link>https://alextrinityblock.github.io/blog/public/post/network/ngrok%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 24 Apr 2021 14:43:44 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/network/ngrok%E4%BD%BF%E7%94%A8/</guid>
      <description>人不可能一帆風順，人生低潮的時候，還是需要能遠端展示網頁的工具 當手邊沒太多錢訂購vps或者是固定ip網路時&amp;hellip;就靠ngrok架站</description>
    </item>
    
    <item>
      <title>docker秒退的問題</title>
      <link>https://alextrinityblock.github.io/blog/public/post/docker/docker.sock%E9%8C%AF%E8%AA%A4%E8%99%95%E7%90%86/</link>
      <pubDate>Fri, 16 Apr 2021 16:31:03 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/docker/docker.sock%E9%8C%AF%E8%AA%A4%E8%99%95%E7%90%86/</guid>
      <description>docker為何秒退的猜測 這只是猜測，個人實力不足，不能直接斷言問題所在。 當docker中所有的程序（process）都執行完畢時，dock</description>
    </item>
    
    <item>
      <title>區域變數與陣列的記憶體安排</title>
      <link>https://alextrinityblock.github.io/blog/public/post/c/%E5%8D%80%E5%9F%9F%E8%AE%8A%E6%95%B8%E8%88%87%E9%99%A3%E5%88%97%E7%9A%84%E8%A8%98%E6%86%B6%E9%AB%94%E5%AE%89%E6%8E%92/</link>
      <pubDate>Sun, 28 Mar 2021 23:58:48 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/c/%E5%8D%80%E5%9F%9F%E8%AE%8A%E6%95%B8%E8%88%87%E9%99%A3%E5%88%97%E7%9A%84%E8%A8%98%E6%86%B6%E9%AB%94%E5%AE%89%E6%8E%92/</guid>
      <description>區域變數與動態分配存在於stack中，是由高位向低位記憶體成長 類似這樣 記憶體高位 ----- int a int b int c . . . ----- 記憶體低位 而陣列存在於heap中，是由</description>
    </item>
    
    <item>
      <title>C語言程式與x86組合語言的關係</title>
      <link>https://alextrinityblock.github.io/blog/public/post/c/c%E8%AA%9E%E8%A8%80%E7%A8%8B%E5%BC%8F%E8%88%87x86%E7%B5%84%E5%90%88%E8%AA%9E%E8%A8%80%E7%9A%84%E9%97%9C%E4%BF%82/</link>
      <pubDate>Thu, 25 Mar 2021 02:14:58 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/c/c%E8%AA%9E%E8%A8%80%E7%A8%8B%E5%BC%8F%E8%88%87x86%E7%B5%84%E5%90%88%E8%AA%9E%E8%A8%80%E7%9A%84%E9%97%9C%E4%BF%82/</guid>
      <description>緣由 前段時間，嘉義大學資訊工程系受人敬重的王教授寄給我一份關於防範buffer overflow的相關文章， 這文章十分的棒，裡頭大致上提到如何</description>
    </item>
    
    <item>
      <title>Gdb使用</title>
      <link>https://alextrinityblock.github.io/blog/public/post/c/gdb%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 24 Mar 2021 14:01:49 +0800</pubDate>
      
      <guid>https://alextrinityblock.github.io/blog/public/post/c/gdb%E4%BD%BF%E7%94%A8/</guid>
      <description>GDB使用指令 --------------- 提示gcc編譯時記得開啟g選項，編譯出來的產物才不會啟動優化， 同時可以使用gdb除錯 匯入檔案：gdb 檔案名稱 匯入後命令行左邊</description>
    </item>
    
  </channel>
</rss>